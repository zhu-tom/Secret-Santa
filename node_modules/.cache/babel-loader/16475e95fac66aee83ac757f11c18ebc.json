{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Sites/secret-santa/src/components/confirmation.js\";\nimport React, { Component } from 'react';\nimport { Grid, Typography, Button, Divider, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport RedeemIcon from '@material-ui/icons/Redeem';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nexport default class Confirm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMatches: false\n    };\n  }\n\n  toggleView() {\n    this.setState(prevState => ({\n      showMatches: !prevState.showMatches\n    }));\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      open: this.state.snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      onClose: this.handleClose,\n      severity: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Matches randomized!\")), this.state.showMatches ? React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Gifter\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Receiver\")))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      variant: \"fullWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), this.props.matches.map(match => React.createElement(Grid, {\n      item: true,\n      key: match.giver.email,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, match.giver.name)), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(RedeemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, match.receiver.name))))))) : React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Participants have been matched randomly.\")))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.toggleView(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.showMatches ? 'Hide Matches' : 'Show Matches')), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.props.refresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(RefreshIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/tom/Sites/secret-santa/src/components/confirmation.js"],"names":["React","Component","Grid","Typography","Button","Divider","Snackbar","MuiAlert","RedeemIcon","RefreshIcon","Confirm","constructor","props","state","showMatches","toggleView","setState","prevState","render","snackbarOpen","handleClose","fontWeight","matches","map","match","giver","email","name","receiver","refresh"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Grid, Typography, Button, Divider, Snackbar} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport RedeemIcon from '@material-ui/icons/Redeem';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nexport default class Confirm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showMatches: false,\n        }\n    }\n\n    toggleView() {\n        this.setState(prevState=>({showMatches: !prevState.showMatches}));\n    }\n    \n    render() {\n        return (\n            <Grid container spacing={2}>\n                <Snackbar open={this.state.snackbarOpen} autoHideDuration={6000} onClose={this.handleClose}>\n                    <MuiAlert elevation={6} variant=\"filled\" onClose={this.handleClose} severity=\"success\">\n                        Matches randomized!\n                    </MuiAlert>\n                </Snackbar>\n                {this.state.showMatches ? \n                (<Grid item><Grid container spacing={2}><Grid item xs={12}>\n                    <Grid container spacing={2} justify=\"space-between\">\n                        <Grid item>\n                            <Typography variant='h6' style={{fontWeight: 'bold'}}>Gifter</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant='h6' style={{fontWeight: 'bold'}}>Receiver</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider variant=\"fullWidth\"/>\n                </Grid>\n                {this.props.matches.map(match => (\n                    <Grid item key={match.giver.email} xs={12}>\n                        <Grid container spacing={0} justify='space-between'>\n                            <Grid item>\n                                <Typography variant='body1'>{match.giver.name}</Typography>\n                            </Grid>\n                            <Grid item>\n                                <RedeemIcon/>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant='body1'>{match.receiver.name}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                ))}</Grid></Grid>):\n                (<Grid item><Grid container justify=\"center\">\n                    <Grid item>\n                        <Typography variant='body1'>Participants have been matched randomly.</Typography>\n                    </Grid>\n                </Grid></Grid>)}\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Button variant=\"contained\" onClick={()=>this.toggleView()}>{this.state.showMatches ? 'Hide Matches':'Show Matches'}</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.props.refresh}>\n                                <RefreshIcon/>\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}