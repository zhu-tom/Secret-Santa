{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Sites/secret-santa/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Sites/secret-santa/src/components/formPaper.js\";\nimport React from 'react';\nimport { Grid, Button, Paper, Typography, Step, Stepper, StepLabel } from '@material-ui/core';\nimport AccountForm from './signUp';\nimport EventForm from './eventInfo';\nimport Confirm from './confirmation';\nvar headers = ['Personal Information', 'Event Details', 'Confirmation'];\nexport default class FormPaper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNum: 1,\n      formInfo: {\n        fname: \"\",\n        lname: \"\",\n        email: \"\",\n        password: \"\",\n        date: new Date(),\n        participants: \"\"\n      },\n      matched: null,\n      snackbarOpen: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.refresh = this.matchParticipants.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose(event) {\n    this.setState({\n      snackbarOpen: false\n    });\n  }\n\n  matchParticipants() {\n    let givers = [];\n    let receivers = [];\n\n    for (let _ref of this.state.formInfo.participants.trim().split(\"\\n\").map(val => val.split(',').map(val => val.trim()))) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      let name = _ref2[0];\n      let email = _ref2[1];\n      givers.push({\n        name: name,\n        email: email\n      });\n      receivers.push({\n        name: name,\n        email: email\n      });\n    }\n\n    let pairs = [];\n\n    while (givers.length > 1) {\n      const _ref3 = [Math.floor(Math.random() * givers.length), Math.floor(Math.random() * receivers.length)],\n            gIndex = _ref3[0],\n            rIndex = _ref3[1];\n\n      if (gIndex !== rIndex) {\n        pairs.push({\n          giver: givers.splice(gIndex, 1)[0],\n          receiver: receivers.splice(rIndex, 1)[0]\n        });\n      }\n    }\n\n    pairs.push({\n      giver: givers[0],\n      receiver: receivers[0]\n    });\n    this.setState({\n      matched: pairs,\n      snackbarOpen: true\n    });\n  }\n\n  handleButtonClick(val) {\n    if (this.state.pageNum + val === 3 && this.state.matched === null) {\n      this.matchParticipants();\n    }\n\n    if (!(this.state.pageNum + val < 1 || this.state.pageNum + val > 4)) {\n      this.setState({\n        pageNum: this.state.pageNum + val\n      });\n    }\n  }\n\n  handleChange(event) {\n    let _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    this.setState(prevState => {\n      let newFormInfo = prevState.formInfo;\n      newFormInfo[name] = value;\n      return {\n        formInfo: newFormInfo\n      };\n    });\n  }\n\n  handleDateChange(e) {\n    let event = e;\n    this.setState(prevState => {\n      prevState.formInfo.date = event;\n      return {\n        formInfo: prevState.formInfo\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(Paper, {\n      elevation: 3,\n      style: {\n        marginTop: '16px',\n        padding: '56px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      activeStep: this.state.pageNum - 1,\n      alternativeLabel: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, headers.map(label => React.createElement(Step, {\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(StepLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, label)))), (() => {\n      switch (this.state.pageNum) {\n        case 1:\n          return React.createElement(AccountForm, {\n            values: this.state.formInfo,\n            handleChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n\n        case 2:\n          return React.createElement(EventForm, {\n            values: this.state.formInfo,\n            handleChange: this.handleChange,\n            handleDateChange: e => this.handleDateChange(e),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          });\n\n        case 3:\n          return React.createElement(Confirm, {\n            handleClose: this.handleClose,\n            snackbarOpen: this.state.snackbarOpen,\n            matches: this.state.matched,\n            refresh: this.refresh,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          });\n\n        default:\n          return null;\n      }\n    })(), React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        marginTop: '24px'\n      },\n      spacing: 1,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"default\",\n      variant: \"contained\",\n      onClick: () => {\n        this.handleButtonClick(-1);\n      },\n      disabled: this.state.pageNum === 1 ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Back\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => {\n        this.handleButtonClick(1);\n      },\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Next\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/tom/Sites/secret-santa/src/components/formPaper.js"],"names":["React","Grid","Button","Paper","Typography","Step","Stepper","StepLabel","AccountForm","EventForm","Confirm","headers","FormPaper","Component","constructor","props","state","pageNum","formInfo","fname","lname","email","password","date","Date","participants","matched","snackbarOpen","handleChange","bind","refresh","matchParticipants","handleClose","event","setState","givers","receivers","trim","split","map","val","name","push","pairs","length","Math","floor","random","gIndex","rIndex","giver","splice","receiver","handleButtonClick","target","value","prevState","newFormInfo","handleDateChange","e","render","marginTop","padding","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Grid, Button, Paper, Typography, Step, Stepper, StepLabel} from '@material-ui/core';\nimport AccountForm from './signUp';\nimport EventForm from './eventInfo';\nimport Confirm from './confirmation';\n\nvar headers = ['Personal Information', 'Event Details', 'Confirmation'];\n\nexport default class FormPaper extends React.Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNum: 1,\n            formInfo: {\n                fname: \"\",\n                lname: \"\",\n                email: \"\",\n                password: \"\",\n                date: new Date(),\n                participants: \"\"\n            },\n            matched: null,\n            snackbarOpen: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.refresh = this.matchParticipants.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleClose(event) {\n        this.setState({snackbarOpen: false});\n    }\n\n    matchParticipants() {\n        let givers = [];\n        let receivers = [];\n        for (let [name, email] of this.state.formInfo.participants\n            .trim()\n            .split(\"\\n\")\n            .map(val=>val.split(',')\n                .map(val=>val.trim()))) {\n            givers.push({name: name, email: email});\n            receivers.push({name: name, email: email});\n        }\n\n        let pairs = [];\n        while (givers.length > 1) {\n            const [gIndex, rIndex] = [Math.floor(Math.random() * givers.length), Math.floor(Math.random() * receivers.length)];\n            if (gIndex !== rIndex) {\n                pairs.push({giver: givers.splice(gIndex, 1)[0], receiver: receivers.splice(rIndex, 1)[0]});\n            }\n        }\n        pairs.push({giver: givers[0], receiver: receivers[0]});\n        this.setState({matched:pairs, snackbarOpen: true});\n    }\n\n    handleButtonClick(val) {\n        if (this.state.pageNum + val === 3 && this.state.matched === null) {\n            this.matchParticipants();\n        }\n        if (!(this.state.pageNum + val < 1 || this.state.pageNum + val > 4)) {\n            this.setState({pageNum: this.state.pageNum + val});\n        }\n    }\n\n    handleChange(event) {\n        let {name, value} = event.target;\n        this.setState(prevState => {\n            let newFormInfo = prevState.formInfo;\n            newFormInfo[name] = value;\n            return {formInfo: newFormInfo};\n        });\n    }\n\n    handleDateChange(e) {\n        let event = e;\n        this.setState(prevState => {\n            prevState.formInfo.date = event;\n            return {formInfo: prevState.formInfo}\n        });\n    }\n\n    render() {\n        return (\n            <Paper elevation={3} style={{marginTop: '16px', padding:'56px'}}>\n                <Stepper activeStep={this.state.pageNum-1} alternativeLabel>\n                    {headers.map(label => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                {(() => {\n                    switch (this.state.pageNum) {\n                        case 1:\n                            return <AccountForm values={this.state.formInfo} handleChange={this.handleChange}/>;\n                        case 2:\n                            return <EventForm values={this.state.formInfo} handleChange={this.handleChange} handleDateChange={(e) => this.handleDateChange(e)}/>;\n                        case 3:\n                            return <Confirm handleClose={this.handleClose} snackbarOpen={this.state.snackbarOpen} matches={this.state.matched} refresh={this.refresh}/>\n                        default:\n                            return null;\n                    }\n                })()}\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Grid container style={{marginTop: '24px'}} spacing={1} justify=\"flex-end\">\n                            <Grid item>\n                                <Button color=\"default\" variant=\"contained\" onClick={() => {this.handleButtonClick(-1)}} disabled={this.state.pageNum === 1 ? true : false}>Back</Button>\n                            </Grid>\n                            <Grid item>\n                                <Button color=\"primary\" onClick={() => {this.handleButtonClick(1)}} variant=\"contained\">Next</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}