{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Sites/secret-santa/src/components/confirmation.js\";\nimport React, { Component } from 'react';\nimport { Grid, Typography, Button, Divider } from '@material-ui/core';\nimport RedeemIcon from '@material-ui/icons/Redeem';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nexport default class Confirm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMatches: false\n    };\n  }\n\n  render() {\n    if (showMatches === true) {\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Gifter\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Receiver\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        variant: \"fullWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), this.props.matches.map(match => React.createElement(Grid, {\n        item: true,\n        key: match.giver.email,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        justify: \"space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, match.giver.name)), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(RedeemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, match.receiver.name))))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.props.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(RefreshIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))))));\n    } else {}\n  }\n\n}","map":{"version":3,"sources":["/Users/tom/Sites/secret-santa/src/components/confirmation.js"],"names":["React","Component","Grid","Typography","Button","Divider","RedeemIcon","RefreshIcon","Confirm","constructor","props","state","showMatches","render","fontWeight","matches","map","match","giver","email","name","receiver","refresh"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Grid, Typography, Button, Divider} from '@material-ui/core';\nimport RedeemIcon from '@material-ui/icons/Redeem';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nexport default class Confirm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showMatches: false,\n        }\n    }\n    \n    render() {\n        if (showMatches===true) {\n            return (\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Grid container spacing={2} justify=\"space-between\">\n                            <Grid item>\n                                <Typography variant='h6' style={{fontWeight: 'bold'}}>Gifter</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant='h6' style={{fontWeight: 'bold'}}>Receiver</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider variant=\"fullWidth\"/>\n                    </Grid>\n                    {this.props.matches.map(match => (\n                        <Grid item key={match.giver.email} xs={12}>\n                            <Grid container spacing={0} justify='space-between'>\n                                <Grid item>\n                                    <Typography variant='body1'>{match.giver.name}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <RedeemIcon/>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant='body1'>{match.receiver.name}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    ))}\n                    <Grid item xs={12}>\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"secondary\" onClick={this.props.refresh}>\n                                    <RefreshIcon/>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            );\n        }\n        else {\n            \n        }\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}